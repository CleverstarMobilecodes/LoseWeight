<resources>

    <!--
         Declare custom theme attributes that allow changing which styles are
         used for button bars depending on the API level.
         ?android:attr/buttonBarStyle is new as of API 11 so this is
         necessary to support previous API levels.
    -->


   <declare-styleable name="ProgressWheel">   
		<attr name="text" format="string" />   
		<attr name="textColor" format="color" />   
		<attr name="textSize" format="dimension" />   
		<attr name="barColor" format="color" />   
		<attr name="rimColor" format="color" />   
		<attr name="rimWidth" format="dimension" />   
		<attr name="spinSpeed" format="integer" />     
		<attr name="circleColor" format="color" />     
		<attr name="radius" format="dimension" />   
		<attr name="barWidth" format="dimension" />   
		<attr name="barLength" format="dimension" />   
	</declare-styleable> 
    
   
   <!--  SWITCH -->
       <declare-styleable name="MySwitch">
        <!-- Drawable to use as the "thumb" that switches back and forth. -->
        <attr name="thumb"  format="reference"/>
        <attr name="thumbOff"  format="reference"/>
        
        <!-- Drawable to use as the "track" that the switch thumb slides within. -->
        <attr name="trackSwitch" format="reference" />
        <attr name="trackOff" format="reference" />
        
        <!-- Text to use when the switch is in the checked/"on" state. -->
        <attr name="textOn" format="reference|string" />
        <!-- Text to use when the switch is in the unchecked/"off" state. -->
        <attr name="textOff" format="reference|string" />
        
        <!-- drawablw to use when the switch is in the checked/"on" state. -->
        <attr name="drawableOn" format="reference" />
        <!-- drawablw to use when the switch is in the unchecked/"off" state. -->
        <attr name="drawableOff" format="reference" />
        
        <attr name="SwitchTextColor" format="color" />
        <!-- Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). -->
        <attr name="SwitchTextSize"  format="dimension" />
        
        <!-- if the switch should operate like iOS UISwitch -->
        <attr name="pushStyle" format="boolean" />
        <!-- if text should be drawn on the Thumb or On the track. -->
        <attr name="textOnThumb" format="boolean" />
        <!-- if the thumb should be allowed to move more beyond the switch boundaries -->
        <attr name="thumbExtraMovement" format="dimension" />
        <!-- Amount of padding on either side of text within the switch thumb. -->
        <attr name="thumbTextPaddingSwitch" format="dimension" />
        <!-- Amount of padding on either side of text within the switch track. -->
        <attr name="trackTextPadding" format="dimension" />
        <!-- TextAppearance style for text displayed on the switch thumb. -->
        <attr name="switchTextAppearanceAttrib" format="reference" />
        <!-- Minimum width for the switch component -->
        <attr name="switchMinWidth1" format="dimension" />
        <!-- Minimum height for the switch component -->
        <attr name="switchMinHeight" format="dimension" />
        <!-- Minimum space between the switch and caption text -->
        <attr name="switchPadding1" format="dimension" />
        
        <attr name="orientation" >
            <!-- the switch moves only on the x-axis(horizontally) -->
            <enum name="horizontal" value="1" />
            <!-- the switch moves only on the y-axis(vertically) -->
            <enum name="vertical" value="0" />
        </attr>
        
        <!-- the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency -->
        <!-- The background when left side of the switch is visible -->
        <attr name="leftBackground" format="reference"/>
        
        <!-- The background when right side of the switch is visible -->
        <attr name="rightBackground" format="reference"/>
        
        <!-- We need a mask drawable to mask the background, then draw the track -->
        <attr name="backgroundMask" format="reference"/>
    </declare-styleable>
    
    <declare-styleable name="mySwitchTextAppearanceAttrib">
        <!-- Text color. -->
     
        
        <!-- Style (bold, italic, bolditalic) for the text. -->
        <attr name="textStyle" >
            <flag name="normal" value="0" />
            <flag name="bold" value="1" />
            <flag name="italic" value="2" />
        </attr>
        
        <!-- Typeface (normal, sans, serif, monospace) for the text. -->
        <attr name="typeface" format="reference">
            <enum name="normal" value="0" />
            <enum name="sans" value="1" />
            <enum name="serif" value="2" />
            <enum name="monospace" value="3" />
        </attr>
        <!-- Color of the text selection highlight. -->
        <attr name="textColorHighlight" format="color" />
        <!-- Color of the hint text. -->
        <attr name="textColorHint" format="color" />
        <!-- Color of the links. -->
        <attr name="textColorLink" format="color" />
        <!-- Present the text in ALL CAPS. This may use a small-caps form when available. -->
    </declare-styleable>
    <!-- Default style for the Switch widget. -->
    <attr name="mySwitchStyleAttr" format="reference" />
   
       <declare-styleable name="SlidingMenu">
        <attr name="mode">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
        </attr>
        <attr name="viewAbove" format="reference" />
        <attr name="viewBehind" format="reference" />
        <attr name="behindOffset" format="dimension" />
        <attr name="behindWidth" format="dimension" />
        <attr name="behindScrollScale" format="float" />
        <attr name="touchModeAbove">
            <enum name="margin" value="0" />
            <enum name="fullscreen" value="1" />
            <enum name="none" value="2" />
        </attr>
        <attr name="touchModeBehind">
            <enum name="margin" value="0" />
            <enum name="fullscreen" value="1" />
            <enum name="none" value="2" />
        </attr>
        <attr name="shadowDrawable" format="reference" />
        <attr name="shadowWidth" format="dimension" />
        <attr name="fadeEnabled" format="boolean" />
        <attr name="fadeDegree" format="float" />
        <attr name="selectorEnabled" format="boolean" />
        <attr name="selectorDrawable" format="reference" />
    </declare-styleable>
    
   
</resources>